---
import Task from './task.astro';
import { serverURL } from '../../pages/conf.js';

let sessionId = Astro.cookies.get('sessionId').value;
let boardId = Astro.props.boardId;

// Fetch tasks
const responseTasks = await fetch(`${serverURL}/tasks/get/byBoard`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ sessionId: sessionId, boardId: boardId }),
});

const { data: tasks } = await responseTasks.json();

// Define status lists
const lists = [
    { listID: 'todo', listName: 'Zu erledigen' },
    { listID: 'doing', listName: 'In Bearbeitung' },
    { listID: 'validated', listName: 'Gepr√ºft' },
    { listID: 'done', listName: 'Erledigt' }
];

// Filter tasks by status
const filteredTasks = {
    todo: [],
    doing: [],
    validated: [],
    done: []
};

for (let task of tasks) {
    if (task.taskStatus === 'todo') {
        filteredTasks.todo.push(task);
    } else if (task.taskStatus === 'doing') {
        filteredTasks.doing.push(task);
    } else if (task.taskStatus === 'validated') {
        filteredTasks.validated.push(task);
    } else if (task.taskStatus === 'done') {
        filteredTasks.done.push(task);
    }
}

console.log(tasks)
---
<div class="dragAndDrop">
    {lists.map(list => (
            <div
                    class="list"
                    @dragover.prevent
                    @drop=`(event) => {
                        const taskId = event.dataTransfer.getData('text/plain');
                        fetch('${serverURL}/dragANDdrop/status', {
                          method: 'PATCH',
                          headers: { 'Content-Type': 'application/json' },
                          body: JSON.stringify({
                            sessionID: '${sessionId}',
                            taskID: taskId,
                            taskStatus: '${list.listID}'
                          })
                        }).then(() => window.location.reload());
                      }`
                    id={`list-${list.listID}`}
            >
                <h2>{list.listName}</h2>
                <Task listID={list.listID} tasks={filteredTasks[list.listID]}></Task>
            </div>
    ))}
</div>