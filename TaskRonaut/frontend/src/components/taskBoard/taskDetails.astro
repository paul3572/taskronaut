---
const { task } = Astro.props;
import { serverURL } from '../../pages/conf.js';
const sessionId = Astro.cookies.get('sessionId').value;
---

<div id="taskDetails" class="task-details-screen" x-cloak>
    <form class="task-details-block"
          hx-patch={`${serverURL}/tasks/update`}
          hx-vals={`js:{sessionId: '${sessionId}', taskID: ${task.taskID}, listID: ${task.listID}, boardID: ${task.boardID} }`  }          hx-swap="none"
          hx-on::after-request="window.location.reload()">



        <p class="closeButton" @click="openDetails = !openDetails">&#10006</p>

        <div class="task-details-content">
            <div class="left-side">
                <div class="left-top">
                    <label for="taskName">Name:</label>
                    <input type="text"
                           id="taskName"
                           name="taskName"
                           value={task.taskName}>
                </div>
                <div class="left-middle">
                    <label for="taskDescription">Beschreibung:</label>
                    <textarea id="taskDescription" name="taskDescription">{task.taskDescription}</textarea>
                </div>
                <div class="left-bottom">
                    <label for="comments">Kommentare:</label>
                    <textarea id="comments" name="comments">{task.comments}</textarea>
                </div>
            </div>

            <div class="right-side">
                <label for="taskCreationDate">Erstellt am:</label>
                <input type="datetime-local"
                       id="taskCreationDate"
                       value={new Date(task.taskCreationDate).toISOString().slice(0, 16)}
                       readonly>

                <label for="dueDate">Fällig am:</label>
                <input type="date"
                       id="dueDate"
                       name="dueDate"
                       value={task.dueDate.split('T')[0]}>

                <label for="priorities">Priorität:</label>
                <div class="slider-container">
                    <input type="range"
                           id="priorities"
                           name="priorities"
                           value={task.priorities}
                           min="1"
                           max="5"
                           step="1"
                           oninput="document.getElementById('priorityValue').textContent = this.value">
                    <span class="slider-value" id="priorityValue">{task.priorities}</span>
                </div>

                <label for="taskStatus">Status:</label>
                <select id="taskStatus" name="taskStatus">
                    <option value="todo" selected={task.taskStatus === 'todo'}>Zu erledigen</option>
                    <option value="doing" selected={task.taskStatus === 'doing'}>In Bearbeitung</option>
                    <option value="validated" selected={task.taskStatus === 'validated'}>Geprüft</option>
                    <option value="done" selected={task.taskStatus === 'done'}>Erledigt</option>
                </select>

                <div class="buttons">
                    <button class="delete-button"
                            hx-delete=`${serverURL}/tasks/delete`
                            hx-vals=`js:{ sessionId: "${sessionId}", taskId: "${Number(task.taskID)}" }`
                            hx-trigger="click"
                            hx-swap="none"
                            hx-on::after-request="window.location.reload()"
                    >
                        delete
                    </button>
                    <button class="save-button" type="submit">
                        save
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>