---
import {serverURL} from "../pages/conf.js";

let sessionId = Astro.cookies.get('sessionId').value;

let localFullName = Astro.cookies.get('user').value;
console.log("localFullName " + localFullName);

let otherUserEmail = Astro.props.otherUserEmail;
console.log("otherUserEmail " + otherUserEmail)

let otherUserName = Astro.props.otherUserName;
console.log("otherUserName " + otherUserName)

const response = await fetch(`${serverURL}/ptp/view`, {
    method: 'POST', headers: {
        'Content-Type': 'application/json'
    }, body: JSON.stringify({sessionId: sessionId, otherUserEmail: otherUserEmail})
});

const {data: ptp} = await response.json();
---
<div class="chat">
    <div class="chat-container">
        <button class="chat-close" @click="showChat = false">X</button>

        <div class="chat-messages" id="messages">
            {ptp.flat().sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime()).map((msg) => {
                const isOwn = msg.senderID === `${localFullName}`;
                console.log(msg.senderID + "," + localFullName)
                return (
                        <div class=`chat-message ${isOwn ? 'chat-message-own' : 'chat-message-other'}`>
                            <div class="chat-sender">{isOwn ? 'Du' : `${otherUserName}`}</div>
                            <div class="chat-content">{msg.message}</div>
                        </div>);
            })}
        </div>

        <div class="chat-input-wrapper">
            <div class="chat-input" x-data="{ messageData: { message: '' } }">
                <input placeholder="Schreibe eine Nachricht..."
                       type="text"
                       x-model="messageData.message"
                       maxlength="255"/>
                <span class="chat-char-count" x-text="`${messageData.message.length}/255`"></span>
                <button @click=`
                    fetch('${serverURL}/ptp/send', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            sessionId: "${sessionId}",
                            otherUserEmail: "${otherUserEmail}",
                            message: messageData.message
                        })
                    }).then(() => window.location.reload());
                `>Senden
                </button>
            </div>
        </div>
    </div>
</div>