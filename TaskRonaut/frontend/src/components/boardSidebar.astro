---
import Alpine from 'alpinejs';
import Ptp from "./ptp.astro";

import {serverURL} from "../pages/conf";
const {boardID} = Astro.props;

let sessionId = Astro.cookies.get('sessionId').value;
console.log('List Session ID:', sessionId);

const boardMembers = await fetch(`${serverURL}/boards/board-members/`, {
    method: 'POST', headers: {
        'Content-Type': 'application/json'
    }, body: JSON.stringify({sessionId: sessionId, boardId: boardID})
});

console.log(sessionId)

const {data: users} = await boardMembers.json();
console.log('Users:', users);


---
<aside class="sidebar">
    <nav class="sidebar-content">
        <hr/>
        <h1>Mitglieder</h1>
        <ul class="sidebar-users">
            {users.map(user => (
                    <li class="user-item">
                        <!-- Profile Section -->
                        <div x-data="{ showProfile: false }">
                            <button class="profileIcon" @click="showProfile = !showProfile">
                                <i class="fa-solid fa-user"></i>
                            </button>
                            <template x-if="showProfile">
                                <!-- Add profile content component here when needed -->
                            </template>
                        </div>

                        <p>{user?.firstName} {user?.lastName}</p>

                        <!-- Chat Section -->
                        <div x-data="{ showChat: false }">
                            <button class="chatCheckBox" @click="showChat = !showChat"
                                    style="cursor: pointer">
                                <i class="fa-regular fa-comment"></i>
                            </button>
                            <template x-if="showChat">
                                <Ptp/>  <!-- Add client directive for hydration -->
                            </template>
                        </div>

                        <button
                                x-cloak
                                x-transition
                                @click=`
                                fetch("${serverURL}/boards/remove", {
                                    method: 'DELETE',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify({ 
                                        sessionId: '${sessionId}',
                                        boardId: ${boardID},
                                        email: '${user.email}'
                                    })
                                }).then(() => {
                                    window.location.reload();
                                });
                                `
                                class="submit-task-button"
                        >
                            delete
                        </button>
                    </li>
            ))}
        </ul>

        <!-- Add User Section -->
        <ul>
            <li>Add user</li>
            <div class="add-board-member" x-data=`{
                    showInput: false,
                    userData: { email: "", boardId: ${boardID} },
                    sessionId: "${sessionId}",
                    toggleInput() {
                        this.showInput = !this.showInput;
                    },
                    saveMember() {
                        if (this.userData.email.trim() !== "") {
                            fetch("${serverURL}/boards/board-member-to-board", {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json"
                                },
                                body: JSON.stringify({ 
                                    sessionId: this.sessionId,
                                    boardId: this.userData.boardId,
                                    email: this.userData.email
                                })
                            }).then(response => {
                                if (response.ok) window.location.reload();
                            });
                        }
                    },
                    cancelMember() {
                        this.showInput = false;
                        this.userData.email = "";
                    }
                }`>
                <button @click="toggleInput" class="add-member-btn">
                    + Add Board Member
                </button>

                <div x-show="showInput" class="member-input-container">
                    <input type="email"
                           x-model="userData.email"
                           placeholder="Enter email"
                           class="member-input">

                    <div class="member-action-btns">
                        <button @click="saveMember" class="save-member-btn">
                            Add Member
                        </button>
                        <button @click="cancelMember" class="cancel-member-btn">
                            Cancel
                        </button>
                    </div>
                </div>
            </div>
        </ul>
        <hr/>
    </nav>
    <div class="sidebar-footer">
        <p></p>
    </div>
</aside>