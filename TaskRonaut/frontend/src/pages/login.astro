---
import {serverURL} from './conf.js';
import '../styles/global.css';
---
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8"/>
    <title>TaskRonaut - Einloggen</title>
</head>
<body>

<div class="login-register-container" id="login-register-container">
    <div class="login" id="login-container">
        <a class="close-button clickable"
           href="/"
           aria-label="Close"
        >&#10006;</a>
        <h2>Einloggen</h2>

        <form id="login-form"
              hx-post=`${serverURL}/authentication/login`
              hx-target="#response"
              hx-swap="innerHTML"
        >

            <!-- EMAIL -->
            <label for="email">Email</label>
            <input type="email"
                   name="email"
                   id="email"
                   required
                   placeholder="Geben Sie Ihre E-Mail ein"
                   minlength="1">

            <div class="password-div">
                <label for="password">Passwort</label>
                <input type="password"
                       name="password"
                       id="password"
                       required
                       placeholder="Passwort eingeben"
                       minlength="6">
            </div>

            <button type="submit" class="clickable">Einloggen</button>
        </form>

        <div id="response" style="padding-top: 10px;"></div>
        <p>Du hast noch keinen Account?
            <a hx-push-url="/register"
               hx-get="/register"
               hx-target="#login-register-container"
               hx-swap="innerHTML transition:true"
               aria-label="Registrieren"
               class="login-register-button clickable">
                Registrieren
            </a>
        </p>
    </div>
</div>

<script>
    import 'htmx.org';
    import Alpine from 'alpinejs';
    import {serverURL} from './conf.js';

    const HTTP_STATUS = {
        BAD_REQUEST: 400, CREATED: 201, OK: 200, CONFLICT: 409, Internal_Server_Error: 500, Unauthorized: 401
    };

    function updateResponse(color, message) {
        const responseElement = document.querySelector('#response');
        if (responseElement) {
            responseElement.innerHTML = message;
        }
    }

    function forwarding(event) {
        const {xhr, successful: isSuccessful, failed: isFailed, target} = event.detail;
        const status = xhr.status;
        const responseText = xhr.responseText;

        const requestOrigin = new URL(xhr.responseURL).origin;
        if (requestOrigin !== `${serverURL.slice(0, -4)}`) {
            console.error("Ungültige Anfrage von:", requestOrigin, ". Expected: " + serverURL.slice(0, -4));
            return;
        }

        switch (status) {
            case HTTP_STATUS.BAD_REQUEST:
                let errorMessage = responseText || "Ein Fehler ist aufgetreten. Bitte versuche es erneut.";
                try {
                    const errorData = JSON.parse(responseText);
                    if (window.location.pathname === "/register") {
                        errorMessage = "Registrierung fehlgeschlagen.<br>Bitte überprüfen Sie Ihre Eingaben und versuchen Sie es erneut.";
                    } else if (window.location.pathname === "/login") {
                        errorMessage = "Falsches Passwort oder E-Mail-Adresse. Bitte versuchen Sie es erneut.";
                    }
                } catch (error) {
                    console.error("Fehler beim Parsen der JSON-Antwort:", error);
                }
                updateResponse('#c40000', errorMessage);
                console.error(`Fehler ${status}:`, errorMessage);
                break;

            case HTTP_STATUS.CREATED:
                if (window.location.pathname === "/register") {
                    updateResponse('#009900', "Erfolgreich erstellt!");
                    console.log("Erstellung erfolgreich!");

                    try {
                        const data = JSON.parse(responseText);
                        localStorage.setItem('registerData', JSON.stringify(data));
                    } catch (error) {
                        console.error("Fehler beim Parsen der JSON-Antwort:", error);
                    }

                    setTimeout(() => {
                        window.location.href = '/emailConfirmation';
                    }, 100);
                }
                break;

            case HTTP_STATUS.Unauthorized:
            case HTTP_STATUS.Internal_Server_Error:
                let unauthorizedErrorMessage = responseText || "Ein Fehler ist aufgetreten. Bitte versuche es erneut.";
                try {
                    const errorData = JSON.parse(responseText);
                    if (window.location.pathname === "/login") {
                        unauthorizedErrorMessage = "Falsches Passwort oder E-Mail-Adresse. Bitte versuchen Sie es erneut.";
                    }
                } catch (error) {
                    console.error("Fehler beim Parsen der JSON-Antwort:", error);
                }
                updateResponse('#c40000', unauthorizedErrorMessage);
                console.error(`Fehler ${status}:`, unauthorizedErrorMessage);
                break;

            case HTTP_STATUS.OK:
                if (window.location.pathname === "/login") {
                    updateResponse('#009900', "Erfolgreich eingeloggt!");
                    console.log("Login erfolgreich!");

                    try {
                        const data = JSON.parse(responseText);
                        const sessionCookie = data.data.session;
                        const sessionId = data.data.sessionId;
                        sessionStorage.setItem('sessionCookie', JSON.stringify(sessionCookie));
                        sessionStorage.setItem('sessionID', JSON.stringify(sessionId));
                    } catch (error) {
                        console.error("Fehler beim Parsen der JSON-Antwort:", error);
                    }

                    setTimeout(() => {
                        window.location.href = '/getCookies';
                    }, 100);
                }
                break;

            case HTTP_STATUS.CONFLICT:
                let emailErrorMessage = responseText || "Ein Fehler ist aufgetreten. Bitte versuche es erneut.";
                try {
                    const errorData = JSON.parse(responseText);
                    if (window.location.pathname === "/register") {
                        emailErrorMessage = "Diese E-Mail-Adresse ist bereits registriert.<br>Bitte melden Sie sich an oder verwenden Sie eine andere E-Mail-Adresse.";
                    }
                } catch (error) {
                    console.error("Fehler beim Parsen der JSON-Antwort:", error);
                }
                updateResponse('#c40000', emailErrorMessage);
                console.error(`Fehler ${status}:`, emailErrorMessage);
                break;

            default:
                console.log("Antwortstatus:", status);
                break;
        }

        if (isSuccessful) {
            console.log("Anfrage erfolgreich:", {status, responseText, target});
        } else if (isFailed) {
            console.error("Anfrage fehlgeschlagen:", {status, responseText, target});
        }
    }

    Alpine.start();
    document.addEventListener('htmx:afterRequest', forwarding);
</script>
</body>
</html>