---
import TaskBoard from "../components/projectBoard/projectBoard.astro";
import Header from "../components/boardHeader.astro";
import Sidebar from "../components/boardSidebar.astro";
import ProjectBoard from "../components/taskBoard/taskBoard.astro";

import '../styles/global.css'
import {sessionCookie} from "./user";
import {serverURL} from "./conf";



let sessionId = Astro.cookies.get('sessionId').value;

const response = await fetch(`${serverURL}/boards/boards/get`, {
    method: 'POST', headers: {
        'Content-Type': 'application/json'
    }, body: JSON.stringify({sessionId: sessionId})
});

const { data: boards } = await response.json();

if (boards === null || boards === undefined) {
    console.log('Boards data is null or undefined');
} else {
    let boardList = [];
    for (let task of boards) {
        for (let key of task) {
            boardList.push(key);
        }
    }
    console.log("boards: ", boards);
}



---

<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TaskRonaut</title>
    <link rel="icon" type="image/x-icon" href="/favicon.svg"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
          integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
          crossorigin="anonymous" referrerpolicy="no-referrer"/>


</head>

<body>
<script>
    import 'htmx.org';
    import Alpine from 'alpinejs';
    import {serverURL} from "./conf";

    Alpine.data('boardCreation', () => ({
        showInput: false,
        boardName: '',
        async createBoard() {
            if (!this.boardName.trim()) return;
            try {
                const response = await fetch(`${serverURL}/boards/boards/`, {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({
                        sessionId: sessionId,
                        boardName: this.boardName
                    })
                });

                if (response.ok) {
                    window.location.reload();
                } else {
                    console.error('Board creation failed');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }
    }));

    Alpine.start();

    import {sessionId} from './user.js';
    import {clientURL} from './conf.js';

    if (document.cookie.includes('sessionId') === null) {
        window.location.href = `/getCookies`;
    }

    if (sessionId === null) {
        window.location.href = `/login`;
    }
</script>

{boards || boards.length > 0 ?   (
        <main class="content" x-data="{ showProjectBoard: false }">
            <div class="main">
                <div x-show="showProjectBoard" class="board scrollable">
                    <ProjectBoard></ProjectBoard>
                </div>
                <div x-show="!showProjectBoard" class="board scrollable">
                    <TaskBoard></TaskBoard>
                </div>
            </div>
        </main>
) : (
        <div class="no-boards" x-data="boardCreation">
            <div class="empty-state">
                <img src="https://i.imgur.com/D5TdiNt.png" alt="No boards" class="illustration"/>
                <h2>Start Organizing Your Work</h2>
                <p class="description">Create your first board to manage tasks and collaborate with your team.</p>

                <div class="creation-flow">
                    <template x-if="!showInput">
                        <button @click="showInput = true" class="create-board-btn">
                            <i class="fas fa-plus"></i> Create New Board
                        </button>
                    </template>

                    <template x-if="showInput">
                        <div class="input-group">
                            <input
                                    type="text"
                                    x-model="boardName"
                                    @keyup.enter="createBoard()"
                                    placeholder="Board name"
                                    class="board-input"
                                    autofocus
                            />
                            <div class="button-group">
                                <button @click="createBoard()" class="submit-btn">
                                    Create
                                </button>
                                <button @click="showInput = false; boardName = ''" class="cancel-btn">
                                    Cancel
                                </button>
                            </div>
                        </div>
                    </template>
                </div>
            </div>
        </div>

        <style lang="scss">
          .no-boards {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background: linear-gradient(135deg, var(--primary), #334155);
            padding: 2rem;
          }

          .empty-state {
            text-align: center;
            max-width: 500px;
            padding: 2rem;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 16px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
          }

          .illustration {
            width: 220px;
            margin-bottom: 1.5rem;
          }

          h2 {
            font-size: 1.8rem;
            color: #1e293b;
            margin-bottom: 0.75rem;
          }

          .description {
            color: #64748b;
            margin-bottom: 2rem;
            line-height: 1.6;
          }

          .creation-flow {
            margin-top: 1.5rem;
          }

          .create-board-btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
            font-weight: 500;
            color: white;
            background: #4f46e5;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.2s ease;

            &:hover {
              background: #4338ca;
              transform: translateY(-1px);
            }

            &:active {
              transform: translateY(0);
            }
          }

          .input-group {
            display: flex;
            flex-direction: column;
            gap: 1rem;
          }

          .board-input {
            padding: 0.75rem 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.2s ease;

            &:focus {
              outline: none;
              border-color: #4f46e5;
              box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
            }
          }

          .button-group {
            display: flex;
            gap: 0.5rem;
            justify-content: center;
          }

          .submit-btn, .cancel-btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 6px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
          }

          .submit-btn {
            background: #4f46e5;
            color: white;

            &:hover {
              background: #4338ca;
            }
          }

          .cancel-btn {
            background: #f1f5f9;
            color: #64748b;

            &:hover {
              background: #e2e8f0;
            }
          }
        </style>
)}
</body>
</html>